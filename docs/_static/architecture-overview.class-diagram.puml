@startuml

skinparam class {
  BackgroundColor #ebebeb
  ArrowColor      #333
  BorderColor     #000
}

skinparam lineType ortho

package builtins {
  class builtins.RuntimeError <<(X,#FFA659)>> {}
}

namespace md.python.dict {
  interface MergeDictionaryInterface {
    + merge(left: dict, right: dict) -> dict
  }
  class DefaultMergeDictionary implements MergeDictionaryInterface {
    + merge(left: dict, right: dict) -> dict
  }
}

namespace md.persistence {
  interface LoadInterface {
    + load(filename: str) -> Tuple[Any, GraphType]
    + supports(filename: str) -> bool
  }

  interface DumpInterface {
    + dump(filename: str, data: Any) -> None
  }

  interface ImportInterface {
    + import_(content: dict, resource_list: List[Tuple[str, str]]) -> Tuple[dict, GraphType]
  }

  interface PersistenceExceptionInterface {}
  class LoadException <<(X,#FFA659)>> extends builtins.RuntimeError implements PersistenceExceptionInterface {
    + {static} IMPORT_ERROR = 1
    + {static} PARSE_ERROR = 2
    + {static} NOT_SUPPORTED = 3
    + {static} REQUIREMENT_MISSED = 4
    ---
    + code: int = 0
    + path: str = None
    ---
    + {static} as_import_error(path: str = None, *, **) -> 'LoadException'
    + {static} as_parse_error(cls, path: str = None, *args, **kwargs) -> 'LoadException'
    + {static} as_not_supported(cls, path: str = None, *args, **kwargs) -> 'LoadException'
    + {static} as_requirement_missed(cls, path: str = None, *args, **kwargs) -> 'LoadException'
    ---
    + __init__(code: int = 0, path: str = None, *, **) -> None
  }

  class DumpException <<(X,#FFA659)>> extends builtins.RuntimeError implements PersistenceExceptionInterface {
    + code: int = 0
    + path: str = None
    ---
    + __init__(code: int = 0, path: str = None, *, **) -> None
  }

  class ImportException <<(X,#FFA659)>> extends builtins.RuntimeError implements PersistenceExceptionInterface {
    + {static} NOT_EXISTS = 1
    + {static} MERGE_ERROR = 2
    + {static} RECURSION_ERROR = 3
    ---
    + code: int = 0
    + path: str = None
    ---
    + {static} as_not_exists(path: str = None, *, **) -> 'ImportException'
    + {static} as_merge(path: str = None, *, **) -> 'ImportException'
    + {static} as_recursion_error(path: str = None, *, **) -> 'ImportException'
    ---
    + __init__(code: int = 0, path: str = None, *, **) -> None
  }

  class DefaultImport implements ImportInterface {
    - load: LoadInterface
    - merge_dictionary: md.python.dict.MergeDictionaryInterface
    ---
    + import_(content: dict, resource_list: List[Tuple[str, str]]) -> Tuple[Dict, GraphType]
  }

  DefaultImport *--> LoadInterface
  DefaultImport *-> md.python.dict.MergeDictionaryInterface

  LoadInterface .. LoadException : "raises >"
  DumpInterface .. DumpException : "raises >"
  ImportInterface .. ImportException : "raises >"
  ImportException .. LoadException : "leads >"
}

@enduml
